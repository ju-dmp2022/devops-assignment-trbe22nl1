# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
permissions:
  checks: write
  contents: read
  actions: write


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Step 1: Check out code from repository
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      # Step 2: Login to ACR
      -
        name: Login to ACR
        uses: docker/login-action@v3
        with:
          registry: judevops.azurecr.io
          username: ${{ secrets.ASSIGNMENT_USERNAME }}
          password: ${{ secrets.ASSIGNMENT_PASSWORD }}

      #Install dependencies
      - name: Install Dependencies
        run: |
          pip install -r ./BE/requirements.txt

      # Step 3: Build and push docker image
      - name: Build and push Docker image
        run: |
          docker build -t judevops.azurecr.io/benny_truong-calculator ./BE
          docker push judevops.azurecr.io/benny_truong-calculator
      
      # Step 4: Start REST API
      - name: Start Rest API
        run: |
          nohup python BE/calculator.py --rest &
      
      - name: Set PYTHONPATH
        run: |
          echo "PYTHONPATH=$(pwd)/BE" >> $GITHUB_ENV

      # Step 5: Build & test run
      - name: Buid and Run Tests
        run: |
          python -m pytest --junit-xml=report.xml
      
      # Step 6: Publish test report
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure() # Always run even if the previous step fails
        with:
          report_paths: 'report.xml'


